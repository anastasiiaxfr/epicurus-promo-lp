$black: #000
$white: #fff
$main: #725CFF

$magenta1: #7B46E5

$dark: #0F0F0F
$dark1: #121417
$dark2: #202025
$dark3: #090909
$dark4: #0F1114
$dark5: #171717

$grey1: #A6A6A6
$grey2: #A3A1A6


$ffHeading: 'Inter'
$ffText: 'Inter'
$ffBack: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"

$xlg: 1400
$lg: 1200
$md: 991
$sm: 768
$xs: 480
$xxs: 360


$trs: all 0.35s ease-in-out

$brs: 20pc
$brs48: 48px
$brs28: 28px

$gap120: 120px	
$gap60: 60px
$gap40: 40px
$gap20: 20px
$gap16: 16px
$gap8: 8px


=ft($fz, $lh: 16, $fw: 400, $ff: $ffText)
    $lh: $lh/$fz
    $fz: $fz/16 + rem
    $ff: $ff, $ffBack
    font: $fw $fz/$lh $ff 


=theme($theme)
    @if $theme == dark
        background-color: $dark
        color: $white

        &.white
            background-color: $white
            color: #2f1376
            
            .lang-btn
                color: $main

            .switch
                input
                    &.active + .switch__slide, &:checked + .switch__slide
                        &::before
                            background-color: $main
                        svg
                            &:last-child
                                color: $white


    @if $theme == white
        background-color: $white
        color: $balck

        


=sz($w, $h)
    width: $w
    height: $h

=flex($fx, $ai, $jc, $fxw)
    display: $fx
    align-items: $ai
    justify-content: $jc
    flex-wrap: $fxw

// input +padding((t, 30px), (b, 40px))
// +position(absolute, (t, 0), (r, 0))
=position($ps, $val)
    @each $x in $ps
        @if $x == t
            top: $val

        @if $x == b
            bottom: $val

        @if $x == l
            left: $val

        @if $x == r
            right: $val

=ps($params...)
    position: nth($params, 1)
    @each $par, $val in $params
        @if $par != null and $val != null
            +position($par, $val)

// input +padding((t, 30px), (b, 40px))
=padding($pd, $val)
    @if $pd == t
        padding-top: $val

    @if $pd == b
        padding-bottom: $val

    @if $pd == l
        padding-left: $val

    @if $pd == r
        padding-right: $val

    @if $pd == all
        padding: $val

=pd($params...)
    @each $par, $val in $params
        @if $par != null and $val != null
            +padding($par, $val)

=margin($mg, $val)
    @if $mg == t
        margin-top: $val

    @if $mg == b
        margin-bottom: $val

    @if $mg == l
        margin-left: $val

    @if $mg == r
        margin-right: $val

    @if $mg == all
        margin: $val

=mg($params...)
    @each $par, $val in $params
        @if $par != null and $val != null
            +margin($par, $val)

// =sp($prop, $params...)
// 	@if $prop == mg
// 		+mg($params)
// 	@if $prop == pd 
// 		+pd($params)	

$i: 0
=spacer($arr)
    @for $val from 1 through length($arr) 
        $spr: nth($arr, 1)
    @if $spr == mg
        @for $i from 2 through length($arr)
            $props: nth($arr, $i)
            +margin($props...)
    @if $spr == pd
        @for $i from 2 through length($arr)
            $props: nth($arr, $i)
            +padding($props...)
    
=sp($x, $y)
    +spacer($x)
    +spacer($y)
        
    
//+sp((mg, (l, 20px), (b, 15px)), (pd, (r, 10px)))

    
=maw($brkp)
    @media only screen and (max-width: $brkp+"px")
        @content

=miw($brkp)
    @media only screen and (min-width: $brkp+"px")
        @content

=mw($min, $max)
    @media only screen and (min-width: $min+"px") and (max-width: $max+"px")
        @content


@function rem($val)
    $res: $val/16 + rem
    @return $res

@function em($val)
    $res: $val/16 + em
    @return $res 



//  font-size: calc([minfz] + ([maxfz] - [minfz]) * ((100vw - [miw]) / ([maw] - [miw])));
    
=rfz($maw, $miw, $minfz, $maxfz)
    $maw : $maw + px
    $miw : $miw + px
    $minfz : $minfz + px
    $maxfz : $maxfz + px	
    @media only screen and (min-width: $miw) 
        font-size: calc(#{$minfz} + (#{$maxfz} - #{$minfz}) * ((100vw - #{$miw}) / (#{$maw} - #{$miw})))

    @media only screen and (min-width: $maw)
        font-size: $maxfz
    
// +rfz(1120, 320, 12, 40)


\:root
    --gap200: 200px
    --gap160: 160px
    --gap120: 120px
    --gap100: 50px
    --maw: 1856px
    +maw($sm)
        --gap200: 100px
        --gap160: 80px
        --gap120: 50px
        --gap100: 50px


%scroll
    &::-webkit-scrollbar
        +sz(10px, 10px)

    &::-webkit-scrollbar-track
        background-color: $black

    &::-webkit-scrollbar-thumb
        background: $black


%dot
    position: relative
    z-index: 1
    &::after
        content: ''
        position: absolute
        z-index: -1
        inset: 0
        margin: auto
        display: block
        +sz(286px, 286px)
        border-radius: 50%
        background-color: rgba($magenta1, 50%)
        filter: blur(200px)
        //background: url('../images/bg0.svg') no-repeat 50%/contain

%card
    margin: 0
    background-color: $dark3
    box-shadow: inset 0 0 150px 10px $black
    border-radius: $brs28
    overflow: hidden

.bg
    &_1
        background-color: $dark1
        border-radius: $brs48